// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: proto/message.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Handshake struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	PlayerName    string                 `protobuf:"bytes,2,opt,name=playerName,proto3" json:"playerName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Handshake) Reset() {
	*x = Handshake{}
	mi := &file_proto_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Handshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Handshake) ProtoMessage() {}

func (x *Handshake) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Handshake.ProtoReflect.Descriptor instead.
func (*Handshake) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{0}
}

func (x *Handshake) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *Handshake) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

type PlayerUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	X             float32                `protobuf:"fixed32,2,opt,name=x,proto3" json:"x,omitempty"`
	Y             float32                `protobuf:"fixed32,3,opt,name=y,proto3" json:"y,omitempty"`
	Z             float32                `protobuf:"fixed32,4,opt,name=z,proto3" json:"z,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerUpdate) Reset() {
	*x = PlayerUpdate{}
	mi := &file_proto_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerUpdate) ProtoMessage() {}

func (x *PlayerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerUpdate.ProtoReflect.Descriptor instead.
func (*PlayerUpdate) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{1}
}

func (x *PlayerUpdate) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerUpdate) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *PlayerUpdate) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *PlayerUpdate) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type ClientMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*ClientMessage_Handshake
	//	*ClientMessage_PlayerUpdate
	Payload       isClientMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientMessage) Reset() {
	*x = ClientMessage{}
	mi := &file_proto_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage) ProtoMessage() {}

func (x *ClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage.ProtoReflect.Descriptor instead.
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{2}
}

func (x *ClientMessage) GetPayload() isClientMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ClientMessage) GetHandshake() *Handshake {
	if x != nil {
		if x, ok := x.Payload.(*ClientMessage_Handshake); ok {
			return x.Handshake
		}
	}
	return nil
}

func (x *ClientMessage) GetPlayerUpdate() *PlayerUpdate {
	if x != nil {
		if x, ok := x.Payload.(*ClientMessage_PlayerUpdate); ok {
			return x.PlayerUpdate
		}
	}
	return nil
}

type isClientMessage_Payload interface {
	isClientMessage_Payload()
}

type ClientMessage_Handshake struct {
	Handshake *Handshake `protobuf:"bytes,1,opt,name=handshake,proto3,oneof"`
}

type ClientMessage_PlayerUpdate struct {
	PlayerUpdate *PlayerUpdate `protobuf:"bytes,2,opt,name=playerUpdate,proto3,oneof"`
}

func (*ClientMessage_Handshake) isClientMessage_Payload() {}

func (*ClientMessage_PlayerUpdate) isClientMessage_Payload() {}

type ServerMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerMessage string                 `protobuf:"bytes,1,opt,name=serverMessage,proto3" json:"serverMessage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	mi := &file_proto_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{3}
}

func (x *ServerMessage) GetServerMessage() string {
	if x != nil {
		return x.ServerMessage
	}
	return ""
}

var File_proto_message_proto protoreflect.FileDescriptor

const file_proto_message_proto_rawDesc = "" +
	"\n" +
	"\x13proto/message.proto\x12\vcyberpunkmp\"G\n" +
	"\tHandshake\x12\x1a\n" +
	"\bplayerId\x18\x01 \x01(\tR\bplayerId\x12\x1e\n" +
	"\n" +
	"playerName\x18\x02 \x01(\tR\n" +
	"playerName\"T\n" +
	"\fPlayerUpdate\x12\x1a\n" +
	"\bplayerId\x18\x01 \x01(\tR\bplayerId\x12\f\n" +
	"\x01x\x18\x02 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x02R\x01y\x12\f\n" +
	"\x01z\x18\x04 \x01(\x02R\x01z\"\x93\x01\n" +
	"\rClientMessage\x126\n" +
	"\thandshake\x18\x01 \x01(\v2\x16.cyberpunkmp.HandshakeH\x00R\thandshake\x12?\n" +
	"\fplayerUpdate\x18\x02 \x01(\v2\x19.cyberpunkmp.PlayerUpdateH\x00R\fplayerUpdateB\t\n" +
	"\apayload\"5\n" +
	"\rServerMessage\x12$\n" +
	"\rserverMessage\x18\x01 \x01(\tR\rserverMessageB%Z#github.com/tonnom/cyberpunkmp/protob\x06proto3"

var (
	file_proto_message_proto_rawDescOnce sync.Once
	file_proto_message_proto_rawDescData []byte
)

func file_proto_message_proto_rawDescGZIP() []byte {
	file_proto_message_proto_rawDescOnce.Do(func() {
		file_proto_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_message_proto_rawDesc), len(file_proto_message_proto_rawDesc)))
	})
	return file_proto_message_proto_rawDescData
}

var file_proto_message_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_message_proto_goTypes = []any{
	(*Handshake)(nil),     // 0: cyberpunkmp.Handshake
	(*PlayerUpdate)(nil),  // 1: cyberpunkmp.PlayerUpdate
	(*ClientMessage)(nil), // 2: cyberpunkmp.ClientMessage
	(*ServerMessage)(nil), // 3: cyberpunkmp.ServerMessage
}
var file_proto_message_proto_depIdxs = []int32{
	0, // 0: cyberpunkmp.ClientMessage.handshake:type_name -> cyberpunkmp.Handshake
	1, // 1: cyberpunkmp.ClientMessage.playerUpdate:type_name -> cyberpunkmp.PlayerUpdate
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_message_proto_init() }
func file_proto_message_proto_init() {
	if File_proto_message_proto != nil {
		return
	}
	file_proto_message_proto_msgTypes[2].OneofWrappers = []any{
		(*ClientMessage_Handshake)(nil),
		(*ClientMessage_PlayerUpdate)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_message_proto_rawDesc), len(file_proto_message_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_message_proto_goTypes,
		DependencyIndexes: file_proto_message_proto_depIdxs,
		MessageInfos:      file_proto_message_proto_msgTypes,
	}.Build()
	File_proto_message_proto = out.File
	file_proto_message_proto_goTypes = nil
	file_proto_message_proto_depIdxs = nil
}
